#!/usr/bin/env bash
#
#

set -Eeuo pipefail

if [ -z "${BASH_SOURCE[0]:-}" ]; then
  # zsh
  GCMPB_BIN_DIR="${0:A:h}"
  # shellcheck disable=SC2034
  IS_ZSH=1
else
  if ! command -v realpath >/dev/null 2>&1; then
    exit 1
  fi
  GCMPB_BIN_DIR="$(dirname "$(realpath "${BASH_SOURCE[0]}")")"
  # shellcheck disable=SC2034
  IS_BASH=1
fi

GCMPB_DIR="$(dirname "${GCMPB_BIN_DIR}")"
GCMPB_LIB_DIR="${GCMPB_DIR}/lib"

PREVIOUS_SHA="${1:-}"
# shellcheck disable=SC2034
NEXT_SHA="${2:-}"
BRANCH_OR_FILES="${3:-}"

if [ "${GCMPB_DEBUG:-}" = 'true' ]; then
  set -x
fi

. "${GCMPB_LIB_DIR}/git-cleanup-merged-pr-branches" "${@}"

config_exclusions="$(excluded_by_config)"

case "${PREVIOUS_SHA}" in
help)
  help
  ;;
*)
  run "${PREVIOUS_SHA}" "${NEXT_SHA}" "${BRANCH_OR_FILES}" "${config_exclusions}" "${GCMPB_AUTO_APPLY:-false}" "${GCMPB_SKIP_CLEANUP_MERGED_PR_BRANCHES:-false}" "${GIT_TERMINAL_PROMPT:-1}" "${GCMPB_VERBOSE:-false}" "${GCMPB_SPINNER:-true}"
  ;;
esac

if [ "${GCMPB_DEBUG:-}" = 'true' ]; then
  set +x
fi
