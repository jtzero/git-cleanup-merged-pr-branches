# This file is a template, and might need editing before it works on your project.
# This is a sample GitLab CI/CD configuration file that should run without any modifications.
# It demonstrates a basic 3 stage CI/CD pipeline. Instead of real tests or scripts,
# it uses echo commands to simulate the pipeline execution.
#
# A pipeline is composed of independent jobs that run scripts, grouped into stages.
# Stages run in sequential order, but jobs within stages run in parallel.
#
# For more information, see: https://docs.gitlab.com/ee/ci/yaml/index.html#stages
#
# You can copy and paste this template into a new `.gitlab-ci.yml` file.
# You should not add this template to an existing `.gitlab-ci.yml` file by using the `include:` keyword.
#
# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Getting-Started.gitlab-ci.yml

cache:
  paths:
    - .asdf/

stages:          # List of stages for jobs, and their order of execution
  - test

integration-tests:
  stage: test
  script:
    - apt-get update -y && apt-get upgrade -y gettext
    - git clone https://github.com/asdf-vm/asdf.git .asdf --branch v0.10.2 || true
    - ln -nfs "${PWD}/.asdf" ~/.asdf
    - . $HOME/.asdf/asdf.sh
    - cat .tool-versions | cut -d' ' -f1 | grep "^[^\#]" | xargs -i asdf plugin add  {} || true
    - asdf install
    - bats tests

smoke-tests:
  stage: test
  variables:
    GCMPB_FILE_TOKEN: /tmp/GCMPB_TOKEN
  script:
    - echo "${GCMPB_TOKEN}" > "${GCMPB_FILE_TOKEN}"
    - ./tests/ci-bootstrap.sh

lint-test:
  stage: test
  script:
    - apt-get update -y && apt-get upgrade -y gettext
    - git clone https://github.com/asdf-vm/asdf.git .asdf --branch v0.10.2 || true
    - ln -nfs "${PWD}/.asdf" ~/.asdf
    - . $HOME/.asdf/asdf.sh
    - cat .tool-versions | cut -d' ' -f1 | grep "^[^\#]" | xargs -i asdf plugin add  {} || true
    - asdf install
    - shellcheck -s bash -x ./bin/git-cleanup-merged-pr-branches -P lib/
    - shfmt -d bin lib
